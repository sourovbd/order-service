
server:
  port: 8082
spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3306/orderdb
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
  application:
    name: ORDER-SERVICE
#  config:
#    import: configserver:http://localhost:9296
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-00296466.okta.com/oauth2/default
      client:
        registration:
          internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oab31islqP5FkhYI5d7
            client-secret: 5mcG6UCw4hEJl_RcWsZ0Au1-YJhdXbfV9VAegya527c3oBNuB4v76FCIHeiZ96as
        provider:
          okta:
            issuer-uri: https://dev-00296466.okta.com/oauth2/default

resilience4j:
  circuitbreaker:
    instances:
      external:
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED

#Following configurations belongs to config server github repository.
eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}
okta:
  oauth2:
    issuer: https://dev-00296466.okta.com/oauth2/default
    audience: api://default